// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nothing.Model.Data;

namespace Nothing.Model.Migrations
{
    [DbContext(typeof(NothingDBContext))]
    [Migration("20200322003153_ss")]
    partial class ss
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Nothing.Model.Entity.Language", b =>
                {
                    b.Property<int>("ID_Language")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Key_Language")
                        .IsRequired()
                        .HasColumnType("varchar(99)");

                    b.Property<string>("Language_EN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language_VN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Language");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("Nothing.Model.Entity.MenuAdmin", b =>
                {
                    b.Property<int>("Id_Menu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameMenu")
                        .IsRequired()
                        .HasColumnType("nvarchar(99)");

                    b.Property<int>("ParentID")
                        .HasColumnType("int");

                    b.Property<string>("Where")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Menu");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("Nothing.Model.Entity.Profile", b =>
                {
                    b.Property<int>("Id_Profile")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Displayname")
                        .IsRequired()
                        .HasColumnType("nvarchar(99)");

                    b.Property<string>("DoctorComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_User")
                        .HasColumnType("int");

                    b.Property<string>("Pathological")
                        .IsRequired()
                        .HasColumnType("nvarchar(999)");

                    b.HasKey("Id_Profile");

                    b.ToTable("Profile");
                });

            modelBuilder.Entity("Nothing.Model.Entity.Role", b =>
                {
                    b.Property<int>("Id_Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Role_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id_Role");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id_Role = 1,
                            Role_Name = "Admin"
                        },
                        new
                        {
                            Id_Role = 2,
                            Role_Name = "Employee"
                        },
                        new
                        {
                            Id_Role = 3,
                            Role_Name = "User"
                        });
                });

            modelBuilder.Entity("Nothing.Model.Entity.User", b =>
                {
                    b.Property<int>("Id_User")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_Role")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LanguageCurrent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasColumnType("varchar(99)");

                    b.Property<string>("RoleMenu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(99)");

                    b.HasKey("Id_User");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id_User = 1,
                            Id_Role = 1,
                            IsDelete = true,
                            LanguageCurrent = "EN",
                            PassWord = "Admin",
                            UserName = "Admin"
                        },
                        new
                        {
                            Id_User = 2,
                            Id_Role = 2,
                            IsDelete = true,
                            LanguageCurrent = "VN",
                            PassWord = "Employee",
                            UserName = "Employee"
                        },
                        new
                        {
                            Id_User = 3,
                            Id_Role = 3,
                            IsDelete = true,
                            LanguageCurrent = "VN",
                            PassWord = "User",
                            UserName = "User"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
